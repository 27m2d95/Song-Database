create database tc03;




create table ARTIST(
ARTIST_ID int not null,
ARTIST_NAME varchar(30),
ARTIST_GENDER char(1) check(ARTIST_GENDER in('F','M')),
ARTIST_COUNTRY varchar(30),
SINGING_KIND varchar(30),
primary key(ARTIST_ID)
);





insert into ARTIST values(111,'EMINEM','M','USA','RAP');
insert into ARTIST values(112,'PCY','M','KOREA','HIP HOP');
insert into ARTIST values(113,'ASSALAH','F','SYRIA','ROMANTIC');
insert into ARTIST values(114,'SNOOP DOGG','M','USA','POP');
insert into ARTIST values(115,'INDILA','F','FRANCE','CLASSIC');





create table ALBUM(
ALBUM_ID int not null,
ALBUM_NAME varchar(30),
ALBUM_KIND varchar(30),
primary key(ALBUM_ID)
);



insert into ALBUM values(1991,'RECOVERY','RAP');
insert into ALBUM values(1992,'PCY-DA','HIP HOP');
insert into ALBUM values(1993,'HAYATI','ROMANTIC');
insert into ALBUM values(1994,'BUSH','RAP');
insert into ALBUM values(1995,'MINI WORLD','CLASSIC');









create table SONG(
SONG_ID int not null,
ALBUM_ID int,
SONG_NAME varchar(30),
SONG_CATEGORY varchar(30),
DURATION decimal(4,2),
SONG_PRICE decimal(7,2),
SONG_LANGUAGE varchar(30),
primary key(SONG_ID),
foreign key(ALBUM_ID)references ALBUM
);



insert into SONG values(1,1991,'NOT AFRAID','CLASSEC',3.50,30.00,'ENGLISH');
insert into SONG values(2,1991,'NO LOVE','JAZZ',4.20,12.50,'ENGLISH');
insert into SONG values(3,1991,'SOO BAD','CLASSEC',5.20,11.30,'ENGLISH');
insert into SONG values(4,1991,'DONT WORRY','HIP HOP',3.15,10.10,'ENGLISH');


insert into SONG values(5,1992,'THE DAY WILL COME','RAP',3.33,20.01,'KOREAN');
insert into SONG values(6,1992,'DREAM','CLASSEC',3.17,5.90,'ENGLISH @ KOREAN');
insert into SONG values(7,1992,'DADDY','HIP HOP',4.02,4.04,'KOREAN');
insert into SONG values(8,1992,'LOVE YOU','HIP HOP',3.16,6.80,'KOREAN');


insert into SONG values(9,1993,'AKTAR','ROMANTIC',7.75,4.11,'ARABIC');
insert into SONG values(10,1993,'HAYATI','SLOW SONG',5.02,4.50,'MIX ARABIC @ FRANCE');
insert into SONG values(11,1993,'WEHNA SAWA','DANCING SONG',4.15,8.60,'ARABIC');
insert into SONG values(12,1993,'ENTA OMRY','ARAB CLASSIC',7.10,6.81,'ARABIC');



insert into SONG values(13,1994,'THIS CITY','RAP',2.50,2.30,'ENGLISH');
insert into SONG values(14,1994,'AWAKE','CLASSEC',4.45,5.40,'ENGLISH @ ITALY');
insert into SONG values(15,1994,'RUN AWAY','PIT BOX',2.40,1.70,'ENGLISH');
insert into SONG values(16,1994,'COME BACK','PIT BOX',2.40,1.75,'ENGLISH');




insert into SONG values(17,1995,'LOVE STORY','ROMANTIC',2.55,4.50,'FRANCE');
insert into SONG values(18,1995,'RUN RUN','CLASSEC',6.20,8.50,'FRANCE');
insert into SONG values(19,1995,'RIGHT NOW ','RAP',3.40,3.60,'ENGLISH');
insert into SONG values(20,1995,'BEAUTIFUL','RAP',2.50,6.20,'ENGLISH');







CREATE TABLE CUSTOMER(

CUSTOMER_ID int not null,
CUSTOMER_NAME varchar(30),      
CUSTOMER_BIRTHDATE date,
CUSTOMER_GENDER char(1) check(CUSTOMER_GENDER in ('M','F')),
CUSTOMER_PHONE varchar(10),
PRIMARY KEY(CUSTOMER_ID)
);



INSERT INTO CUSTOMER VALUES(111,'FIKRI','1990-05-30','M','0112342557');
INSERT INTO CUSTOMER VALUES(112,'AMINA','1995-11-05','F','0116632565');
INSERT INTO CUSTOMER VALUES(113,'AMIN','1968-07-09','M','0132342564');
INSERT INTO CUSTOMER VALUES(114,'RIMA','1957-08-27','F','0142342565');
INSERT INTO CUSTOMER VALUES(115,'RAMI','1999-02-17','M','0162342565');
INSERT INTO CUSTOMER VALUES(116,'TARIK','1993-01-20','M','0182342565');
INSERT INTO CUSTOMER VALUES(117,'NADIR','1990-03-05','M','0112379565');
INSERT INTO CUSTOMER VALUES(118,'MONIR','1970-12-06','M','0172342657');
INSERT INTO CUSTOMER VALUES(119,'SARAH','1985-10-23','F','0192345657');





CREATE TABLE PURCHASEALB(
CUSTOMER_ID int not null,
ALBUM_ID int not null,
DATE date,
primary key(CUSTOMER_ID,ALBUM_ID),
foreign key (CUSTOMER_ID) references CUSTOMER,
foreign key(ALBUM_ID) references ALBUM
);





INSERT INTO PURCHASEALB VALUES(111,1993,'2015-12-08');
INSERT INTO PURCHASEALB VALUES(113,1995,'2016-01-05');
INSERT INTO PURCHASEALB VALUES(116,1993,'2014-12-04');
INSERT INTO PURCHASEALB VALUES(119,1994,'2015-03-18');




CREATE TABLE PURCHASES(
CUSTOMER_ID int not null,
SONG_ID int not null,
DATE date,
primary key(CUSTOMER_ID,SONG_ID),
foreign key (CUSTOMER_ID) references CUSTOMER,
foreign key(SONG_ID) references SONG
);





INSERT INTO PURCHASES VALUES(112,1,'2013-11-08');
INSERT INTO PURCHASES VALUES(112,15,'2015-12-08');
INSERT INTO PURCHASES VALUES(114,5,'2016-01-07');
INSERT INTO PURCHASES VALUES(115,19,'2014-12-09');
INSERT INTO PURCHASES VALUES(117,13,'2015-03-14');
INSERT INTO PURCHASES VALUES(117,9,'2012-03-13');
INSERT INTO PURCHASES VALUES(117,18,'2013-03-11');
INSERT INTO PURCHASES VALUES(118,10,'2011-03-19');








CREATE TABLE RELEASE(
SONG_ID int not null,
ARTIST_ID int not null,
DATE date,
primary key(SONG_ID,ARTIST_ID),
foreign key (ARTIST_ID) references ARTIST,
foreign key(SONG_ID) references SONG
);



INSERT INTO RELEASE VALUES(19,111,'2008-03-25');
INSERT INTO RELEASE VALUES(20,111,'2007-08-20');
INSERT INTO RELEASE VALUES(13,111,'2010-05-18');
INSERT INTO RELEASE VALUES(5,111,'2009-09-11');
INSERT INTO RELEASE VALUES(8,112,'2008-02-22');
INSERT INTO RELEASE VALUES(3,112,'2008-12-21');
INSERT INTO RELEASE VALUES(7,112,'2006-09-15');
INSERT INTO RELEASE VALUES(4,112,'2008-09-13');
INSERT INTO RELEASE VALUES(9,113,'2005-04-29');
INSERT INTO RELEASE VALUES(12,113,'2004-11-21');
INSERT INTO RELEASE VALUES(17,113,'2002-07-19');
INSERT INTO RELEASE VALUES(10,113,'2005-03-15');
INSERT INTO RELEASE VALUES(2,114,'2008-02-09');
INSERT INTO RELEASE VALUES(15,114,'2006-10-11');
INSERT INTO RELEASE VALUES(16,114,'2009-09-17');
INSERT INTO RELEASE VALUES(11,114,'2010-06-15');
INSERT INTO RELEASE VALUES(1,115,'2008-02-09');
INSERT INTO RELEASE VALUES(6,115,'2006-09-10');
INSERT INTO RELEASE VALUES(14,115,'2005-04-04');
INSERT INTO RELEASE VALUES(18,115,'2007-07-06');




Select ARTIST_NAME,SONG_NAME,SONG_PRICE,SONG_CATEGORY,DURATION
FROM SONG,ARTIST,RELEASE
WHERE ARTIST.ARTIST_ID = RELEASE.ARTIST_ID
 AND RELEASE.SONG_ID = SONG.SONG_ID 
AND SONG.ALBUM_ID<=1995
AND SONG_PRICE=(SELECT max(SONG_PRICE)FROM SONG);



SELECT COUNT(SONG_NAME)AS COUNT_SONG,SONG_CATEGORY,SUM(SONG_PRICE) AS TOTAL_PRICE
FROM SONG
GROUP BY SONG_CATEGORY;




Select CUSTOMER_NAME,SONG_NAME,SONG_PRICE,SONG_CATEGORY,ARTIST_NAME,PURCHASES.DATE,CUSTOMER_PHONE
FROM SONG,CUSTOMER,PURCHASES,ARTIST,RELEASE
WHERE PURCHASES.SONG_ID = SONG.SONG_ID
AND PURCHASES.CUSTOMER_ID = CUSTOMER.CUSTOMER_ID
AND ARTIST.ARTIST_ID = RELEASE.ARTIST_ID
 AND RELEASE.SONG_ID = SONG.SONG_ID 
ORDER BY CUSTOMER_NAME DESC;


SELECT ARTIST_NAME ,ARTIST_COUNTRY,ARTIST_GENDER
FROM ARTIST
WHERE ARTIST_GENDER='M'
AND ARTIST_COUNTRY LIKE 'USA';



SELECT CUSTOMER_NAME,ALBUM_NAME,CUSTOMER_PHONE ,DATE
FROM CUSTOMER,PURCHASEALB,ALBUM
WHERE PURCHASEALB.ALBUM_ID = ALBUM.ALBUM_ID
AND PURCHASEALB.CUSTOMER_ID = CUSTOMER.CUSTOMER_ID
AND DATE=(SELECT MIN(DATE)FROM PURCHASEALB);




UPDATE SONG
SET SONG_PRICE = (SELECT AVG(SONG_PRICE) FROM SONG)
WHERE ALBUM_ID IN (SELECT ALBUM_ID FROM ALBUM WHERE ALBUM_NAME = 'BUSH');



SELECT SONG_NAME,SONG_PRICE,ALBUM.ALBUM_ID,ALBUM_NAME 
FROM SONG,ALBUM
WHERE ALBUM.ALBUM_ID = SONG.ALBUM_ID
AND ALBUM_NAME = 'BUSH';




CREATE VIEW BUYERS AS
SELECT * FROM CUSTOMER 
WHERE CUSTOMER_BIRTHDATE BETWEEN '1990-01-01' AND '1999-01-01'
AND CUSTOMER_PHONE LIKE'%65';

SELECT * FROM BUYERS;





CREATE TRIGGER AUTO_PRICE 
AFTER INSERT ON SONG 
FOR EACH ROW MODE DB2SQL
UPDATE SONG 
SET SONG_PRICE =  5
WHERE SONG_CATEGORY = 'RAP'
AND SONG_PRICE IS NULL;


INSERT INTO SONG VALUES (21,1995,'FULL MARK','RAP',3.08,NULL,'ENGLISH');
INSERT INTO SONG VALUES (22,1995,'FULL MARK','RAP',3.08,NULL,'ENGLISH');

SELECT * FROM SONG;





CREATE PROCEDURE DISC(IN DISCOUNT INT)
BEGIN 
UPDATE SONG 
SET SONG_PRICE = SONG_PRICE - DISCOUNT
WHERE SONG_PRICE > 6;
END@

CALL DISC(2);


SELECT * FROM SONG






SELECT  SONG_NAME,SONG_PRICE
FROM SONG
ORDER BY SONG_PRICE DESC
LIMIT 5;





SELECT DATE,ARTIST_NAME,SONG_NAME,SONG_CATEGORY
FROM RELEASE,ARTIST,SONG
WHERE ARTIST.ARTIST_ID = RELEASE.ARTIST_ID
AND SONG.SONG_ID = RELEASE.SONG_ID
ORDER BY DATE ASC
LIMIT 5;



SELECT ARTIST_NAME,COUNT(SONG_LANGUAGE) AS ENGLISH_TYPE
FROM SONG,ARTIST,RELEASE
WHERE 
ARTIST.ARTIST_ID=RELEASE.ARTIST_ID
AND RELEASE.SONG_ID=SONG.SONG_ID
AND SONG.SONG_LANGUAGE='ENGLISH'
GROUP BY ARTIST_NAME
HAVING COUNT(SONG_LANGUAGE)>1;











create table SONG2(
SONG_ID int not null,
ALBUM_ID int,
SONG_NAME varchar(30),
SONG_CATEGORY varchar(30),                                       
DURATION decimal(4,2),
SONG_PRICE decimal(7,2),
SONG_LANGUAGE varchar(30),
primary key(SONG_ID),
foreign key(ALBUM_ID)references ALBUM
);




insert into SONG2 values(1,1991,'NOT AFRAID','CLASSEC',3.50,30.00,'ENGLISH');
insert into SONG2 values(2,1991,'NO LOVE','JAZZ',4.20,12.50,'ENGLISH');
insert into SONG2 values(3,1991,'SOO BAD','CLASSEC',5.20,11.30,'ENGLISH');
insert into SONG2 values(4,1991,'DONT WORRY','HIP HOP',3.15,10.10,'ENGLISH');


insert into SONG2 values(5,1992,'THE DAY WILL COME','RAP',3.33,20.01,'KOREAN');
insert into SONG2 values(6,1992,'DREAM','CLASSEC',3.17,5.90,'ENGLISH @ KOREAN');
insert into SONG2 values(7,1992,'DADDY','HIP HOP',4.02,4.04,'KOREAN');
insert into SONG2 values(8,1992,'LOVE YOU','HIP HOP',3.16,6.80,'KOREAN');


insert into SONG2 values(9,1993,'AKTAR','ROMANTIC',7.75,4.11,'ARABIC');
insert into SONG2 values(10,1993,'HAYATI','SLOW SONG',5.02,4.50,'MIX ARABIC @ FRANCE');
insert into SONG2 values(11,1993,'WEHNA SAWA','DANCING SONG',4.15,8.60,'ARABIC');
insert into SONG2 values(12,1993,'ENTA OMRY','ARAB CLASSIC',7.10,6.81,'ARABIC');



insert into SONG2 values(13,1994,'THIS CITY','RAP',2.50,2.30,'ENGLISH');
insert into SONG2 values(14,1994,'AWAKE','CLASSEC',4.45,5.40,'ENGLISH @ ITALY');
insert into SONG2 values(15,1994,'RUN AWAY','PIT BOX',2.40,1.70,'ENGLISH');
insert into SONG2 values(16,1994,'COME BACK','PIT BOX',2.40,1.75,'ENGLISH');




insert into SONG2 values(17,1995,'LOVE STORY','ROMANTIC',2.55,4.50,'FRANCE');
insert into SONG2 values(18,1995,'RUN RUN','CLASSEC',6.20,8.50,'FRANCE');
insert into SONG2 values(19,1995,'RIGHT NOW ','RAP',3.40,3.60,'ENGLISH');
insert into SONG2 values(20,1995,'BEAUTIFUL','RAP',2.50,6.20,'ENGLISH');





CREATE TRIGGER NEWADDP
after INSERT ON SONG2 
REFERENCING NEW AS N
FOR EACH ROW MODE DB2SQL
Update SONG2 
SET SONG_PRICE=N.SONG_PRICE + 1;




insert into SONG2 values(24,1994,'COME BACK','PIT BOX',2.40,39.00,'ENGLISH');

select * from SONG2;